<?xml version="1.0" encoding="UTF-8"?>
<Configuration>
   <!--  -->
  <Appenders>
    <Console name="Out" target="SYSTEM_OUT">
       <!-- 레벨을 통해: 에러냐, 기본적인 오류냐 출력이냐 등등의 정보를 조절가능 -->
      <!-- <PatternLayout pattern="%-5level: %logger{36}.%M() - %msg%n"/>  -->
      <PatternLayout pattern="%-5level: %d{DEFAULT} %logger{1}.%M() - %msg%n"/> <!--%d{DEFAULT} : 시간정보 추가  -->
      <!-- level:ERROR 등의 정보, %logger: 어디의 로그 %m:어떤 메소드? %msg% : 내가 입력한 입력값 , %n :개행하라. 한줄띄워라 -->
      <!-- ex ) WARN : servlet.exam03.ContentController.doGet() - 실행 -->
    </Console>
  </Appenders>
  
  <Loggers>
      <!-- servlet(수정후 com.mycompany.servletjsp)  에서 출력되는 것은 
      level(지금은 debug) 이상의 로그(메세지: 디버그, info, error, warn)들만 출력되라! 라는 의미  -->
    <Logger name="com.mycompany.springwebapp" level="info" additivity="false"><!-- info 일때 : info, error, warn 만 출력됨 -->
      <AppenderRef ref="Out"/>
    </Logger>
    <!-- WebApplication 이 DB로 보내는 SQL문을 로그로 출력하기 위한 설정 -->
     <Logger name="jdbc.sqlonly" level="info" additivity="false"><!-- info 일때 : info, error, warn 만 출력됨 -->
      <AppenderRef ref="Out"/>
    </Logger>
     <!-- DB가 보내는 결과를 로그로 출력하기 위한 설정 --> <!-- info 일때 : info, error, warn 만 출력됨 -->
   <!--  <Logger name="jdbc.resultset" level="info" additivity="false">
      <AppenderRef ref="Out"/>
    </Logger>-->
    <Root level="error">
      <AppenderRef ref="Out"/>
    </Root>
  </Loggers>
</Configuration>